{"version":3,"file":"static/js/548.a4759403.chunk.js","mappings":"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","sources":["components/Answer/Answer.js","context/AnswerHandler.js","components/Answers/Answers.js","components/Question/Question.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","components/Result/Result.js","data.js","containers/Home/Home.js","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import React from \"react\";\r\nimport { Typography, Paper } from \"@mui/material\";\r\nimport \"./Answer.css\";\r\n\r\nconst Answer = (props) => {\r\n  return (\r\n    <div className=\"answer\" onClick={props.selectedAnswer}>\r\n      <Paper\r\n        elevation={2}\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          margin: 2,\r\n          height: 57,\r\n        }}\r\n      >\r\n        <Typography\r\n          className=\"option\"\r\n          variant=\"h5\"\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            padding: \"0 15px\",\r\n            marginRight: 5,\r\n            height: \"100%\",\r\n          }}\r\n        >\r\n          {props.option}\r\n        </Typography>\r\n        <Typography variant=\"h5\">{props.answer}</Typography>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import React from \"react\";\r\n\r\nconst AnswerHandlerCtx = React.createContext(() => {});\r\n\r\nexport default AnswerHandlerCtx;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Answers.css\";\r\nimport Answer from \"../Answer/Answer\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport AnswerHandlerCtx from \"../../context/AnswerHandler\";\r\n\r\nconst options = [\"A\", \"B\", \"C\", \"D\"];\r\n\r\nconst Answers = (props) => {\r\n  const ansCTX = useContext(AnswerHandlerCtx);\r\n\r\n  const content = props.answers.map((eachAns, index) => {\r\n    let selected = options[index];\r\n    if (eachAns.selected) {\r\n      selected = <CheckIcon />;\r\n    }\r\n    return (\r\n      <Answer\r\n        key={eachAns.id}\r\n        option={selected}\r\n        answer={eachAns.ans}\r\n        selectedAnswer={() => ansCTX(eachAns.id)}\r\n      />\r\n    );\r\n  });\r\n  return <div>{content}</div>;\r\n};\r\n\r\nexport default Answers;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Question.css\";\r\nimport { Paper, Button, Typography } from \"@mui/material\";\r\nimport Answers from \"../Answers/Answers\";\r\n\r\nconst Question = (props) => {\r\n  const { question, answers } = props.question;\r\n  const [enableButton, setEnabledButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    for (const ans of answers) {\r\n      if (ans.selected) {\r\n        setEnabledButton(true);\r\n        return;\r\n      }\r\n      setEnabledButton(false);\r\n    }\r\n  }, [answers]);\r\n\r\n  return (\r\n    <div className=\"question\">\r\n      <Typography variant=\"h4\" sx={{ textAlign: \"center\", marginTop: 3 }}>\r\n        Are you an introvert or an extrovert?\r\n      </Typography>\r\n      <Paper\r\n        sx={{\r\n          padding: 3,\r\n          margin: 2,\r\n          background: \"rgb(39, 127, 178)\",\r\n          color: \"white\",\r\n        }}\r\n      >\r\n        {question}\r\n      </Paper>\r\n      <Answers answers={answers} />\r\n      <div className=\"button\">\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ background: enableButton ? \"black\" : \"#ccc\" }}\r\n          onClick={props.nextQuestion}\r\n          disabled={!enableButton}\r\n        >\r\n          {props.finish ? \"Finish\" : \"Next\"}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\r\nimport { Paper, Typography, Button, Box } from \"@mui/material\";\r\n\r\nconst Result = (props) => {\r\n  return (\r\n    <Box\r\n      sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\r\n    >\r\n      <Paper elevation={4} sx={{ width: \"75%\", padding: 2, marginTop: 3 }}>\r\n        <Typography variant=\"h3\" sx={{ textAlign: \"center\", marginBottom: 2 }}>\r\n          Personality Profile\r\n        </Typography>\r\n        <Typography variant=\"h5\">{props.result}</Typography>\r\n      </Paper>\r\n      <Button variant=\"outlined\" sx={{ marginTop: 2 }} onClick={props.goBack}>\r\n        Back To Questions\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","export const conclusions = [\r\n  \"Yor are an Extrovert. You are interested in engaging with the environment, and you feed off the responses of people and events around them. You enjoy pushing limits and seeing what the world can do. This all depends on many other factors and lifes natural limitations, but you lean towards taking initiative and rely on the world around you for validation\",\r\n  \"You are an Introvert. You have a tendency to be reserved, which helps you to pace yourself. You arre likely to listen to others more carefully. You are very introspective. You enjoy been focused alone – leading to more and deeper insights. Sometimes you are too sensitive to the environments, this often helps you pick up clues more quickly, making you great at reading many situations.\",\r\n  \"You are more of an Introvert but a little of Extrovert characteristics can be found in you.You arre likely to listen to others more carefully. You are sometimes too sensitive to the environments. Your limits are tested with the world around you and probably you can be reserved at critical situations\",\r\n];\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Question from \"../../components/Question/Question\";\r\nimport Result from \"../../components/Result/Result\";\r\nimport { Typography } from \"@mui/material\";\r\nimport useFetchData from \"../../customHooks/useDataFetching\";\r\nimport HOSTURL from \"../../config\";\r\nimport axios from \"axios\";\r\nimport { conclusions } from \"../../data\";\r\nimport AnswerHandlerCtx from \"../../context/AnswerHandler\";\r\n\r\nconst Home = () => {\r\n  const [questions, setQuestions] = useFetchData(`${HOSTURL}/question`);\r\n  const [count, setCount] = useState(0);\r\n  const [result, setResult] = useState(null);\r\n  const [option, setOption] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  let publishedQuestions = [];\r\n\r\n  if (questions) {\r\n    publishedQuestions = questions.filter((each) => each.published === true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    let extrovert = 0;\r\n    let introvert = 0;\r\n    if (showResult) {\r\n      for (let i = 0; i < answers.length; i++) {\r\n        if (answers[i] === 1) {\r\n          extrovert += 1;\r\n        } else {\r\n          introvert += 1;\r\n        }\r\n      } // go through the answers counting the extrovert and introvert to determine personality\r\n      if (extrovert > introvert) {\r\n        setResult(conclusions[0]);\r\n      } else if (extrovert < introvert) {\r\n        setResult(conclusions[1]);\r\n      } else {\r\n        setResult(conclusions[2]);\r\n      }\r\n    }\r\n  }, [answers, count, publishedQuestions.length, showResult]);\r\n\r\n  const nextHandler = () => {\r\n    if (count < publishedQuestions.length - 1) {\r\n      setCount((prevState) => prevState + 1);\r\n      setAnswers((prevState) => prevState.concat(option));\r\n      return;\r\n    } // increase the count for the next question and add the extrovert or introvert option to answers\r\n    setAnswers((prevState) => prevState.concat(option));\r\n    setShowResult(true);\r\n  };\r\n\r\n  const selectAnswerHandler = (id) => {\r\n    const questionsCopy = [...publishedQuestions];\r\n    const currentQuestion = questionsCopy[count]; //get the current question\r\n    const currentAnswers = [...currentQuestion.answers]; // get the current answers\r\n\r\n    //mark the choosen answer and also set the answer to an extrovert or introvert ie. 1 or 2\r\n    currentAnswers.forEach((eachAns) => {\r\n      if (eachAns.id === id) {\r\n        const ansIndex = currentAnswers.findIndex((ans) => ans.id === id); // use the index of the answer choosen to know whether to set an extrovert answer or introvert answer\r\n        if (ansIndex > 1) {\r\n          setOption(2); // extrovert answer\r\n        } else {\r\n          setOption(1); // introvert answer\r\n        }\r\n        eachAns.selected = true;\r\n      } else {\r\n        eachAns.selected = false;\r\n      }\r\n    });\r\n    currentQuestion.answers = currentAnswers;\r\n    questionsCopy[count] = currentQuestion;\r\n    setQuestions(questionsCopy);\r\n  };\r\n\r\n  const goBackHandler = () => {\r\n    axios\r\n      .get(`${HOSTURL}/question`)\r\n      .then((resp) => {\r\n        setResult(null);\r\n        setQuestions(resp.data);\r\n        setCount(0);\r\n        setOption(0);\r\n        setShowResult(false);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  let questionContent = (\r\n    <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\r\n      loading question...\r\n    </Typography>\r\n  );\r\n\r\n  if (publishedQuestions.length === 0) {\r\n    questionContent = (\r\n      <Typography variant=\"h4\" sx={{ textAlign: \"center\" }}>\r\n        no questions to load...\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  if (publishedQuestions.length > 0) {\r\n    questionContent = (\r\n      <Question\r\n        question={publishedQuestions[count]}\r\n        nextQuestion={nextHandler}\r\n        finish={questions.length - 1 === count}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (result) {\r\n    questionContent = <Result result={result} goBack={goBackHandler} />;\r\n  }\r\n\r\n  return (\r\n    <AnswerHandlerCtx.Provider value={selectAnswerHandler}>\r\n      <div className=\"home\">{questionContent}</div>\r\n    </AnswerHandlerCtx.Provider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;"],"names":["props","className","onClick","selectedAnswer","Paper","elevation","sx","display","alignItems","margin","height","Typography","variant","padding","marginRight","option","answer","React","options","ansCTX","useContext","AnswerHandlerCtx","content","answers","map","eachAns","index","selected","Check","ans","id","question","useState","enableButton","setEnabledButton","useEffect","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","textAlign","marginTop","background","color","Button","style","nextQuestion","disabled","finish","Box","flexDirection","width","marginBottom","result","goBack","conclusions","useFetchData","HOSTURL","questions","setQuestions","count","setCount","setResult","setOption","setAnswers","showResult","setShowResult","publishedQuestions","filter","each","published","extrovert","introvert","questionContent","prevState","concat","axios","then","resp","data","catch","error","console","log","AnswerHandler","questionsCopy","currentQuestion","currentAnswers","forEach","ansIndex","findIndex","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}